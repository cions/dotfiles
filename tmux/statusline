#!/bin/zsh

memusage() {
    local meminfo total used free percent color

    meminfo=( "${(@f)$(</proc/meminfo)}" )
    (( total = ${meminfo[(r)MemTotal:*][(w)2]:-0} ))
    (( free = ${meminfo[(r)MemFree:*][(w)2]:-0} ))
    (( free += ${meminfo[(r)Buffers:*][(w)2]:-0} ))
    (( free += ${meminfo[(r)Cached:*][(w)2]:-0} ))
    (( used = total - free ))
    (( percent = used * 100.0 / total ))

    if (( percent >= 80.0 )); then
        color="red"
    elif (( percent >= 60.0 )); then
        color="yellow"
    else
        color="green"
    fi
    if [[ $1 != "-s" ]]; then
        print -nf "%s:ÔÉñ%4s/%4s (%.2f%%)" \
            ${color} \
            "$(numfmt --from-unit=Ki --to=iec ${used})" \
            "$(numfmt --from-unit=Ki --to=iec ${total})" \
            ${percent}
    else
        print -nr "${color}:ÔÉñ$(numfmt --from-unit=Ki --to=iec ${used})"
    fi
}

swapusage() {
    local meminfo total used percent color

    meminfo=( "${(@f)$(</proc/meminfo)}" )
    (( total = ${meminfo[(r)SwapTotal:*][(w)2]:-0} ))
    (( used = total - ${meminfo[(r)SwapFree:*][(w)2]:-0} ))
    (( percent = used * 100.0 / total ))

    if (( total == 0 )); then
        color="gray2"
    elif (( percent >= 80.0 )); then
        color="red"
    elif (( percent >= 60.0 )); then
        color="yellow"
    else
        color="green"
    fi
    if [[ $1 != "-s" ]]; then
        print -nf "%s:ÔÇñ%4s/%4s (%.2f%%)" \
            ${color} \
            "$(numfmt --from-unit=Ki --to=iec ${used})" \
            "$(numfmt --from-unit=Ki --to=iec ${total})" \
            ${percent}
    else
        print -nr "${color}:ÔÇñ$(numfmt --from-unit=Ki --to=iec ${used})"
    fi
}

loadavg() {
    local loadavg nproc color

    loadavg=( ${$(</proc/loadavg)[1,3]} )
    nproc=$(nproc --all)

    if (( loadavg[1] / nproc >= 1.0 )); then
        color="red"
    elif (( loadavg[1] / nproc >= 0.5 )); then
        color="yellow"
    else
        color="green"
    fi
    if [[ $1 != "-s" ]]; then
        print -nr "${color}:ÔÅΩ${(j: :)loadavg}"
    else
        print -nr "${color}:ÔÅΩ${loadavg[1]}"
    fi
}

width="$(tmux display -p "#{client_width}")"
segments=()
case "$1" in
    left)
        segments+=( "cyan:#S" "cyan:#H" )
        frozen=""
        frozen+="$(~/.tmux/freezer query pane "üÑø" "")"
        frozen+="$(~/.tmux/freezer query emerge "üÑ¥" "")"
        frozen+="$(~/.tmux/freezer query www-browser "üÖÜ" "")"
        [[ -n ${frozen} ]] && segments+=( "orange:${frozen}" )
        powerprompt -f tmux -L -- "${segments[@]}"
        ;;
    right)
        if (( width >= 130 )); then
            segments+=( "$(memusage)" )
        elif (( width >= 96 )); then
            segments+=( "$(memusage -s)" )
        fi
        if (( width >= 145 )); then
            segments+=( "$(swapusage)" )
        elif (( width >= 104 )); then
            segments+=( "$(swapusage -s)" )
        fi
        if (( width >= 114 )); then
            segments+=( "$(loadavg)" )
        else
            segments+=( "$(loadavg -s)" )
        fi
        if (( width >= 80 )); then
            segments+=( "cyan:ÔÅ®${(%):-"%D{%Y-%m-%d}"}" )
        fi
        if (( width >= 70 )); then
            segments+=( "cyan:ÔÅÜ${(%):-"%D{%H:%M}"}" )
        fi
        powerprompt -f tmux -R -- "${segments[@]}"
        ;;
    window)
        powerprompt -f tmux -n -L -- "gray1:" "gray2: #I:#W#F "
        ;;
    cwindow)
        powerprompt -f tmux -n -L -- "gray1:" "green: #I:#W#F "
        ;;
esac
