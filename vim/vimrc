scriptversion 4
set encoding=utf-8

" prelude
let g:vimfiles = expand('<sfile>:p:h')

let g:cachedir = g:vimfiles .. '/.cache'
call mkdir(g:cachedir, 'p', 0o700)

if exists('$TMPDIR')
  let g:tempdir = printf('%s/vim-%d', $TMPDIR, getpid())
else
  let g:tempdir = printf('/tmp/vim-%d', getpid())
endif
call mkdir(g:tempdir, 'p', 0o700)

if has('vim_starting')
  call vimrc#setup_goenv()
  call vimrc#setup_ndenv()
  call vimrc#setup_pyenv()
  call vimrc#setup_rbenv()
  call vimrc#setup_rsenv()
endif

" disable default plugins
let g:loaded_2html_plugin = 1
let g:loaded_fzf = 1
let g:loaded_gentoo_common = 1
let g:loaded_getscriptPlugin = 1
let g:loaded_gzip = 1
let g:loaded_logiPat = 1
let g:loaded_matchparen = 1
let g:loaded_netrwPlugin = 1
let g:loaded_newebuild = 1
let g:loaded_newglep = 1
let g:loaded_newinitd = 1
let g:loaded_newmetadata = 1
let g:loaded_rrhelper = 1
let g:loaded_spellfile_plugin = 1
let g:loaded_tarPlugin = 1
let g:loaded_vimballPlugin = 1
let g:loaded_zipPlugin = 1

" dein.vim
let s:deindir = g:vimfiles .. '/dein'
let s:deinrepo = s:deindir .. '/repos/github.com/Shougo/dein.vim'

if has('vim_starting')
  if !isdirectory(s:deinrepo)
    call vimrc#await(vimrc#setup_dein(s:deinrepo))
  endif
  let &runtimepath = s:deinrepo .. ',' .. &runtimepath
endif

let g:dein#types#git#clone_depth = 1
let g:dein#types#git#pull_command = 'fetch --depth=1 && git reset --merge @{upstream}'

if dein#min#load_state(s:deindir)
  let s:tomls = glob(g:vimfiles .. '/*.toml', 0, 1)
  let s:vimrcs = [$MYVIMRC] + s:tomls

  call dein#begin(s:deindir, s:vimrcs)
  for s:toml in s:tomls
    call dein#load_toml(s:toml)
  endfor
  for s:dir in glob('~/src/*/cions', 0, 1)
    call dein#local(s:dir, { 'frozen': 1, 'merged': 0 }, ['vim-*', '*.vim'])
  endfor
  call dein#end()
  call dein#save_state()
endif

call dein#call_hook('source')
if has('vim_starting')
  autocmd VimEnter * ++once call dein#call_hook('post_source')
else
  call dein#call_hook('post_source')
endif

syntax enable
filetype plugin indent on

" options
set hidden
set mouse=a
set ttymouse=sgr
set ttimeout
set ttimeoutlen=100
set shelltemp
set splitbelow
set splitright

set showtabline=2
set laststatus=2
set statusline=%F\ %y[%{&fenc?&fenc:&enc}:%{&ff}]%m%r%w%=(%l,%c)
set shortmess+=cmrFI
set belloff=all
set noruler
set noshowcmd
set noshowmode
set notitle

set scrolloff=3
set sidescroll=1
set sidescrolloff=1
set backspace=indent,eol,start
set virtualedit=block
set complete=.,i,d,t
set completeopt=menu
set pumheight=0
set matchpairs& matchpairs+=<:>
set nojoinspaces
set nrformats=bin,hex
set smarttab
set shiftround
set autoindent
set smartindent

set history=200
set cedit=<C-Q>
set wildmenu
set wildmode=longest:full,full
set suffixes& suffixes-=.h

set wrap
set linebreak
set breakindent
set breakindentopt=min:35,sbr
set showbreak=>\ 
set list
set listchars=tab:>-,trail:-,extends:>,precedes:<
set display=truncate,uhex
set conceallevel=0
set lazyredraw
set hlsearch
set highlight& highlight+=@:SpecialKey

set path=.,,
set noincsearch
set ignorecase
set smartcase

let &backupdir = '.,' .. g:tempdir
let &directory = g:cachedir
set writebackup
set nobackup
set viminfo=
set viminfofile=NONE

if has('gui_running')
  set background=light
  set guioptions=abefiMg
  set iminsert=0
  set imsearch=0
  if has('gui_gtk3')
    set guifont=Monospace\ 18
  elseif has('gui_win32')
    set guifont=MiG_Mono:h18:cSHIFTJIS:qDRAFT
  endif
  if has('directx')
    set renderoptions=type:directx
  endif
else
  set background=dark
endif
if dein#is_sourced('vim-colors-solarized')
  colorscheme solarized
endif

set helplang=en,ja

if &term ==# 'win32'
  set termencoding=cp932
else
  set termencoding=utf-8
endif
set fileencodings=ucs-bom,utf-8,euc-jisx0213,cp932
set fileformats=unix,dos

if executable('rg')
  set grepprg=rg\ --vimgrep
  set grepformat=%f:%l:%c:%m
else
  set grepprg=internal
endif

" key bindings
noremap s <Nop>
noremap S <Nop>
nnoremap ZZ <Nop>
nnoremap ZQ <Nop>
nnoremap Y y$
nnoremap x "_x
nnoremap j gj
nnoremap k gk
nnoremap 0 g0
nnoremap ^ g^
nnoremap gj j
nnoremap gk k
nnoremap g0 0
nnoremap g^ ^
xnoremap < <gv
xnoremap > >gv
noremap <MiddleMouse> <Nop>
noremap <2-MiddleMouse> <Nop>
noremap <3-MiddleMouse> <Nop>
noremap <4-MiddleMouse> <Nop>
inoremap <MiddleMouse> <Nop>
inoremap <2-MiddleMouse> <Nop>
inoremap <3-MiddleMouse> <Nop>
inoremap <4-MiddleMouse> <Nop>

nnoremap <silent> gh :<C-u>nohlsearch<CR>
nnoremap <silent> <Leader>n :<C-u>set number!<CR>
nnoremap <silent> <Leader>N :<C-u>set relativenumber!<CR>
nnoremap <silent> <Leader>w :<C-u>set wrap! wrap?<CR>

map _ <Plug>(operator-replace)
map sl <Plug>(operator-reverse-lines)
map sw <Plug>(operator-reverse-text)
map gc <Plug>(caw:prefix)
map gci <Plug>(caw:hatpos:comment)
nmap gcd <Plug>(textmanip-duplicate-up)<Plug>(caw:hatpos:comment)+
xmap gcd <Plug>(textmanip-duplicate-up)gv<Plug>(caw:hatpos:comment)'>+
map [e <Plug>(edgemotion-k)
map ]e <Plug>(edgemotion-j)
map * <Plug>(asterisk-z*)
map # <Plug>(asterisk-z#)
map g* <Plug>(asterisk-gz*)
map g# <Plug>(asterisk-gz#)
nmap <Space>d <Plug>(textmanip-duplicate-down)
xmap <Space>d <Plug>(textmanip-duplicate-down)<Esc>
nmap <Space>D <Plug>(textmanip-duplicate-up)
xmap <Space>D <Plug>(textmanip-duplicate-up)<Esc>
xmap <Space>h <Plug>(textmanip-duplicate-left)<Esc>
xmap <Space>l <Plug>(textmanip-duplicate-right)<Esc>
xmap H <Plug>(textmanip-move-left)
xmap J <Plug>(textmanip-move-down)
xmap K <Plug>(textmanip-move-up)
xmap L <Plug>(textmanip-move-right)
omap i, <Plug>(swap-textobject-i)
xmap i, <Plug>(swap-textobject-i)
omap a, <Plug>(swap-textobject-a)
xmap a, <Plug>(swap-textobject-a)

cnoremap <C-A> <Home>
cnoremap <C-B> <Left>
cnoremap <C-F> <Right>

tnoremap <C-W>gT <C-W>:tabprev<CR>
tnoremap <C-W>gt <C-W>:tabnext<CR>
tnoremap <silent> <C-W><C-h> <C-W>:call job_stop(term_getjob(bufnr('%')), 'hup')<CR>
tnoremap <C-W><Esc> <C-W>N

" commands
command! -nargs=* -bang Update call vimrc#update(<bang>0, <f-args>)
command! Clean call vimrc#clean()
command! SynStack call vimrc#synstack()
command! Highlight call vimrc#highlight()

" autocmd
augroup vimrc
  autocmd!
  autocmd BufWritePost,BufFilePost * ++nested filetype detect
  autocmd VimLeave * call delete(g:tempdir, 'rf')
augroup END

