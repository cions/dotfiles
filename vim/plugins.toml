[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'altercation/vim-colors-solarized'
hook_source = '''
let g:solarized_termcolors = &t_Co
let g:solarized_termtrans = 1
let g:solarized_menu = 0
let g:solarized_italic = 0
let g:solarized_underline = 0
'''

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_source = 'call vimrc#lightline#on_source()'

[[plugins]]
repo = 'tpope/vim-repeat'

[[plugins]]
repo = 'cohama/lexima.vim'
hook_post_source = 'call vimrc#lexima#on_post_source()'

[[plugins]]
repo = 'kana/vim-textobj-user'

[[plugins]]
repo = 'kana/vim-textobj-entire'

[[plugins]]
repo = 'kana/vim-textobj-indent'

[[plugins]]
repo = 'kana/vim-textobj-line'

[[plugins]]
repo = 'sgur/vim-textobj-parameter'

[[plugins]]
repo = 'wellle/targets.vim'

[[plugins]]
repo = 'kana/vim-operator-user'

[[plugins]]
repo = 'kana/vim-operator-replace'

[[plugins]]
repo = 'tyru/operator-reverse.vim'

[[plugins]]
repo = 'machakann/vim-sandwich'
hook_source = 'call vimrc#sandwich#on_source()'
hook_post_source = 'call vimrc#sandwich#on_post_source()'

[[plugins]]
repo = 'machakann/vim-swap'

[[plugins]]
repo = 'haya14busa/vim-edgemotion'

[[plugins]]
repo = 'haya14busa/vim-asterisk'

[[plugins]]
repo = 'tyru/caw.vim'
hook_source = '''
let g:caw_zeropos_skip_blank_line = 1
let g:caw_dollarpos_sp_left = '  '
'''

[[plugins]]
repo = 't9md/vim-textmanip'

[[plugins]]
repo = 'deris/vim-rengbang'

[[plugins]]
repo = 'junegunn/vim-easy-align'
hook_source = '''
let g:easy_align_bypass_fold = 1

map gA <Plug>(EasyAlign)
'''

[[plugins]]
repo = 'tpope/vim-sleuth'

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'roxma/nvim-yarp'
if = '!has("nvim")'

[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'
if = '!has("nvim")'

[[plugins]]
repo = 'prabirshrestha/async.vim'

# [[plugins]]
# repo = 'Shougo/deoplete.nvim'
# hook_source = 'call vimrc#deoplete#on_source()'
# hook_post_source = 'call vimrc#deoplete#on_post_source()'

# [[plugins]]
# repo = 'Shougo/neco-syntax'

[[plugins]]
repo = 'prabirshrestha/asyncomplete.vim'
hook_source = '''
inoremap <expr> <Tab> pumvisible() ? "\<C-n>" : "\<Tab>"
inoremap <expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-Tab>"

let g:asyncomplete_preprocessor = [function('asyncomplete#preprocessor#preprocess')]
'''

[[plugins]]
repo = 'prabirshrestha/asyncomplete-file.vim'
hook_source = '''
autocmd User asyncomplete_setup call asyncomplete#register_source(asyncomplete#sources#file#get_source_options({
  \   'name': 'file',
  \   'whitelist': ['*'],
  \   'priority': 5,
  \   'completor': function('asyncomplete#sources#file#completor')
  \ }))
'''

[[plugins]]
repo = 'prabirshrestha/asyncomplete-neosnippet.vim'
hook_source = '''
autocmd User asyncomplete_setup call asyncomplete#register_source(asyncomplete#sources#neosnippet#get_source_options({
  \   'name': 'neosnippet',
  \   'whitelist': ['*'],
  \   'priority': 8,
  \   'completor': function('asyncomplete#sources#neosnippet#completor')
  \ }))
'''

# [[plugins]]
# repo = 'machakann/asyncomplete-ezfilter.vim'
# hook_source = '''
# let g:asyncomplete_preprocessor = [function('asyncomplete#preprocessor#ezfilter#filter')]
#
# let g:asyncomplete#preprocessor#ezfilter#config = {}
# let g:asyncomplete#preprocessor#ezfilter#config['*'] =
#   \ {ctx, items -> ctx.osa_filter(items, 1)}
# '''

[[plugins]]
repo = 'Shougo/neosnippet.vim'
hook_source = '''
let g:neosnippet#snippets_directory = g:vimfiles .. '/snippets'
let g:neosnippet#data_directory = g:cachedir .. '/neosnippet'
let g:neosnippet#disable_runtime_snippets = { '_': 1 }

imap <C-k> <Plug>(neosnippet_expand_or_jump)
smap <C-k> <Plug>(neosnippet_expand_or_jump)
xmap <C-k> <Plug>(neosnippet_expand_target)
'''

[[plugins]]
repo = 'Shougo/denite.nvim'
hook_source = 'call vimrc#denite#on_source()'
hook_post_source = 'call vimrc#denite#on_post_source()'

[[plugins]]
repo = 'Shougo/defx.nvim'
hook_source = 'call vimrc#defx#on_source()'
hook_post_source = 'call vimrc#defx#on_post_source()'

# [[plugins]]
# repo = 'kristijanhusak/defx-git'

# [[plugins]]
# repo = 'kristijanhusak/defx-icons'
