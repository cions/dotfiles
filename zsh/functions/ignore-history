#!/bin/zsh

emulate -L zsh

[[ ${argv[1]} == " "* ]] && return 2

local tokens=( ${(z)argv[1]%$'\n'} )

case ${tokens[1]} in
    bat|cat)
        (( ${#tokens} == 2 )) && return 2
        ;;
    cd|l[Aatls]|llt|less|r[mr])
        return 1
        ;;
    man|run-help|vi|vim)
        return 2
        ;;
esac

(( ${(M)#tokens:#--help(|[-=]*)} )) && return 2
(( ${(M)#tokens:#help} )) && return 2
(( ${(M)#tokens:#--version} )) && return 2

(( ${(M)#reswords:#${tokens[1]}} )) && return 0
(( ${+aliases[${tokens[1]}]} )) && return 0
[[ ${tokens[1]} == "(" ]] && return 0        # ( subshell )
[[ ${tokens[1]} == "()" ]] && return 0       # () { unnamed function }
[[ ${tokens[2]} == "()" ]] && return 0       # func() { function definition }
[[ ${tokens[1]} == \(\(*\)\) ]] && return 0  # (( arithmetic expression ))

if [[ -o EQUALS && ${tokens[1]} == "="* ]]; then
    return $(( ! ${+commands[${(Qe)tokens[1]#=}]} ))
fi

local cmd=${(Qe)tokens[1]}
(( ${+commands[${cmd}]} )) && return 0
(( ${+functions[${cmd}]} )) && return 0
(( ${+builtins[${cmd}]} )) && return 0
[[ ${cmd} == */* && -x ${cmd} ]] && return 0

return 1
