#!/bin/zsh

emulate -L zsh

if [[ ${argv[1]} == " "* ]] return 2

local tokens=( ${(z)argv[1]%$'\n'} )

case ${tokens[1]} in
    (bat|cat)
        if (( ${#tokens} == 2 )) return 2
        ;;
    (cd|exa|l[Aatls]|less|man|r[mr]|vi|vim)
        return 1
        ;;
esac

if [[ ${tokens[-1]} == --help(|[-=]*) ]] return 2
if [[ ${tokens[-1]} == "--version" ]] return 2
if [[ ${tokens[2]} == "help" ]] return 2

if (( ${(M)#reswords:#${tokens[1]}} )) return 0
if (( ${+aliases[${tokens[1]}]} )) return 0
if [[ ${tokens[1]} == "(" ]] return 0        # ( subshell )
if [[ ${tokens[1]} == "()" ]] return 0       # () { unnamed function }
if [[ ${tokens[2]} == "()" ]] return 0       # func() { function definition }
if [[ ${tokens[1]} == \(\(*\)\) ]] return 0  # (( arithmetic expression ))

if [[ -o EQUALS && ${tokens[1]} == "="* ]] {
    return $(( ! ${+commands[${(Qe)tokens[1]#=}]} ))
}

local cmd=${(Qe)tokens[1]}
if (( ${+commands[${cmd}]} )) return 0
if (( ${+functions[${cmd}]} )) return 0
if (( ${+builtins[${cmd}]} )) return 0
if [[ ${cmd} == */* && -x ${cmd} ]] return 0

return 1
