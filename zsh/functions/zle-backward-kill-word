#!/bin/zsh

emulate -L zsh
setopt extended_glob

autoload -Uz match-words-by-style

local -a matched_words
local word i

match-words-by-style -w shell

# print "\nzle: debug: [${(q+)matched_words[@]}]"

if [[ ${LBUFFER} == \ # && -n ${matched_words[5]} ]]; then
	zle copy-region-as-kill -- ${matched_words[5]}
	LBUFFER=${matched_words[3]}${matched_words[4]}
	LBUFFER=${LBUFFER:+ }
	RBUFFER=${matched_words[7]:+ }${matched_words[7]}
	return 0
fi

case "${matched_words[2]}" in
	\"*\"|\'*\'|$\'*\')
		;;
	*=\"*\"|*=\'*\'|*=$\'*\')
		i=${matched_words[2][(i)=]}
		matched_words[1]+=${matched_words[2][1,i]}
		matched_words[2]=${matched_words[2][i+1,-1]}
		;;
	*\(?*\))
		i=${matched_words[2][(I)\(]}
		matched_words[1]+=${matched_words[2][1,i-1]}
		matched_words[2]=${matched_words[2][i,-1]}
		;;
	*\$\{*\})
		matched_words[1]+=${(R)matched_words[2]%\$\{*\}}
		matched_words[2]=${(M)matched_words[2]%\$\{*\}}
		;;
	*[,/:=]*)
		i=${matched_words[2][(Ib:-2:)[,/:=]]}
		matched_words[1]+=${matched_words[2][1,i]}
		matched_words[2]=${matched_words[2][i+1,-1]}
		;;
	'')
		if [[ ${matched_words[1]} == *'&!'[[:space:]]# ]]; then
			matched_words[2]=${(M)matched_words[1]%&![[:space:]]#}
			matched_words[1]=${(R)matched_words[1]%&![[:space:]]#}
		fi
esac

word="${matched_words[2]}${matched_words[3]}"
if [[ -n ${word} ]]; then
	zle copy-region-as-kill -- ${word}
	LBUFFER=${matched_words[1]}
	return 0
else
	return 1
fi
