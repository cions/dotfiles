set -s default-terminal "tmux-256color"
set -s escape-time 0
set -s focus-events on

set -g assume-paste-time 10
set -g base-index 1
set -g display-time 0
set -g history-limit 100000
set -g mouse on
set -g renumber-windows on
set -g repeat-time 1000
set -g set-titles on
set -g set-titles-string "#{pane_current_command} - tmux(#S)"
set -g update-environment "COLORTERM DISPLAY ENABLE_ICONS VIM_TERMINAL WINDOWID XAUTHORITY"
set -ag update-environment "SSH_AGENT_PID SSH_ASKPATH SSH_AUTH_SOCK SSH_CLIENT SSH_CONNECTION SSH_TTY"

set -wg aggressive-resize on
set -wg allow-rename off
set -wg automatic-rename-format "#{?pane_in_mode,[tmux],#{pane_current_command}}"
set -wg mode-keys vi
set -wg mode-style "fg=colour235,bg=colour227"
set -wg pane-base-index 1
set -wg xterm-keys on

set -g message-command-style "fg=colour252,bg=colour238"
set -g message-style "fg=colour252,bg=colour238"
set -g status on
set -g status-interval 5
set -g status-justify left
set -g status-keys emacs
set -g status-left "#(~/.tmux/statusline left)"
set -g status-left-length 0
set -g status-right "#(~/.tmux/statusline right)"
set -g status-right-length 0
set -g status-style "fg=colour252,bg=colour238"
set -wg pane-active-border-style "fg=colour117"
set -wg pane-border-style "fg=colour238"
set -wg window-status-current-format "#(~/.tmux/statusline cwindow)"
set -wg window-status-format "#(~/.tmux/statusline window)"
set -wg window-status-separator ""

set -g prefix C-j
unbind C-b
bind C-j send-prefix

bind C-l refresh-client
bind C-h clear-history
bind '$' command-prompt -I "#S" 'rename-session "%%%"'
bind & confirm-before -p "kill-session #S? (y/n)" kill-session
bind r source-file ~/.tmux.conf \; display-message "tmux.conf reloaded"

bind c new-window
bind C new-window sudo -i
bind -r C-p select-window -p
bind -r C-n select-window -n
bind -r < swap-window -dt :-
bind -r > swap-window -dt :+
bind w set-option -gF @session_id "#{session_id}" \; choose-tree -Zwf "#{==:#{session_id},#{@session_id}}"
bind N command-prompt -I "#W" 'rename-window "%%%"'
bind X confirm-before -p "kill-window #W? (y/n)" kill-window

bind s if -F "#{==:#{pane_start_command},sudo -i}" "split-window -h sudo -i" "split-window -h"
bind S if -F "#{==:#{pane_start_command},sudo -i}" "split-window -v sudo -i" "split-window -v"
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind q display-panes -d 0
bind C-o select-pane -Zl
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5
bind -r C-Down resize-pane -D
bind -r C-Up resize-pane -U
bind -r C-Left resize-pane -L
bind -r C-Right resize-pane -R
bind = select-layout -E
bind M-Left swap-pane -s "{left-of}"
bind M-Right swap-pane -s "{right-of}"
bind M-Up swap-pane -s "{up-of}"
bind M-Down swap-pane -s "{down-of}"
bind ! break-pane
bind '"' if -F "#{pane_marked_set}" "join-pane" { choose-tree -Z "join-pane -s '%%'" }
bind % if -F "#{pane_marked_set}" "swap-pane" { display-panes -d 0 "swap-pane -s '%%'" }
bind x confirm-before -p "kill-pane #{pane_current_command}? (y/n)" kill-pane

bind v copy-mode
bind p run '${HOME}/.tmux/executor paste | tmux load-buffer -; tmux paste-buffer -r'
bind '#' choose-buffer "paste-buffer -b '%%'"
bind - choose-buffer "delete-buffer -b '%%'"
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi V send -X select-line
bind -T copy-mode-vi C-v send -X rectangle-toggle
bind -T copy-mode-vi y send -X copy-pipe-and-cancel '${HOME}/.tmux/executor copy'
bind -T copy-mode-vi o send -X copy-pipe-and-cancel '${HOME}/.tmux/executor openbrowser'
bind -T copy-mode-vi C-o send -X copy-pipe-and-cancel '${HOME}/.tmux/executor open #{q:pane_current_path}'

bind -n MouseDown1Pane select-pane -t= \; send-keys -M
bind -n MouseDown2Pane select-pane -t= \; \
   if -Ft= "#{mouse_any_flag}" "send-keys -M" "select-pane -m"
bind -n MouseDown3Pane select-pane -t= \; send-keys -M
bind -n MouseDrag1Pane select-pane -t= \; \
   if -Ft= "#{?pane_in_mode,0,#{mouse_any_flag}}" "send-keys -M" "copy-mode -M"
bind -n WheelUpPane select-pane -t= \; if -Ft= "#{mouse_any_flag}" "send-keys -M" {
   if -Ft= "#{pane_in_mode}" "send-keys -M; send-keys -M; send-keys -M" {
      if -Ft= "#{alternate_on}" "send-keys Up Up Up" "copy-mode -e; send-keys -M; send-keys -M; send-keys -M"
   }
}
bind -n WheelDownPane select-pane -t= \; if -Ft= "#{mouse_any_flag}" "send-keys -M" {
   if -Ft= "#{pane_in_mode}" "send-keys -M; send-keys -M; send-keys -M" {
      if -Ft= "#{alternate_on}" "send-keys Down Down Down" ""
   }
}

setenv -g TERM "tmux-256color"
setenv -g LANG "en_US.UTF-8"
setenv -g LC_TIME "en_US.UTF-8"
setenv -g LC_MESSAGE "en_US.UTF-8"
setenv -g LANGUAGE "en_US"
